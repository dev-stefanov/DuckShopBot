from telebot.types import InlineKeyboardMarkup, InlineKeyboardButton
from telebot.types import ReplyKeyboardMarkup, KeyboardButton

keyboard = InlineKeyboardMarkup([
    [InlineKeyboardButton(text='', callback_data='' )]
])

menu = ReplyKeyboardMarkup(resize_keyboard=True)

btn1 = KeyboardButton('üõí –ö–∞—Ç–∞–ª–æ–≥ —Ç–æ–≤–∞—Ä–æ–≤ üõí')
btn2 = KeyboardButton('üë§ –ü—Ä–æ—Ñ–∏–ª—å')
btn3 = KeyboardButton('‚Ñπ –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è')

menu.add(btn1).row(btn2, btn3)

def categories(res):
    kb = []
    for i in range(len(res)):
        kb.append([InlineKeyboardButton(text=res[i].name, callback_data='category;' + str(res[i].id))])
    return InlineKeyboardMarkup(kb)

def goods(res):
    kb =[]
    for i in range(len(res)):
        kb.append([InlineKeyboardButton(text=f'{res[i].name} | {res[i].cost} ‚ÇΩ | {res[i].count} —à—Ç.', callback_data='good;' + str(res[i].id))])
    kb.append([InlineKeyboardButton(text='–ù–∞–∑–∞–¥ –∫–æ –≤—Å–µ–º –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º', callback_data='back_to_category')])
    return InlineKeyboardMarkup(kb)

def good(name, category, count):
    print(count)
    print(name, type(name))
    count= int(count)
    kb = InlineKeyboardMarkup(row_width=5)
    row_1 = []
    row_2 = []
    if count >= 10:
        for i in range(5):
            row_1.append(InlineKeyboardButton(text=i+1, callback_data='count;' + name + ';' + str(i+1)))
        for i in range(6, 11):
            row_2.append(InlineKeyboardButton(text=i, callback_data='count;' + name + ';' + str(i)))
        kb.add(row_1[0], row_1[1], row_1[2], row_1[3], row_1[4])
        kb.add(row_2[0], row_2[1], row_2[2], row_2[3], row_2[4])
    else:
        for i in range(count):
            row_1.append(InlineKeyboardButton(text=i+1, callback_data='count;' + name + ';' + str(i+1)))
        kb.add(*row_1)
            
    kb.add(InlineKeyboardButton(text='–í–≤–µ—Å—Ç–∏ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –≤—Ä—É—á–Ω—É—é', callback_data='choose_count;' + name))
    kb.add(InlineKeyboardButton(text='–ù–∞–∑–∞–¥', callback_data='back_to_goods;' + category))
    kb.add(InlineKeyboardButton(text='–ù–∞–∑–∞–¥ –∫–æ –≤—Å–µ–º –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º', callback_data='back_to_category;' + name))
    return kb

def del_category(res):
    kb = []
    for i in res:
        kb.append([InlineKeyboardButton(text=i.name, callback_data='delete_category;' + str(i.id))])
    kb.append([InlineKeyboardButton(text='–ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é', callback_data='back_to_admin')])
    return InlineKeyboardMarkup(kb)

def del_good(res):
    kb =[]
    for i in range(len(res)):
        kb.append([InlineKeyboardButton(text=f'{res[i].name} | {res[i].category}', callback_data='delete_good;' + str(res[i].id))])
    kb.append([InlineKeyboardButton(text='–ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é', callback_data='back_to_admin')])
    return InlineKeyboardMarkup(kb)

def edit_categories(res):
    kb = []
    for i in res:
        kb.append([InlineKeyboardButton(text=i.name, callback_data='ed_categories;' + str(i.id))])
    kb.append([InlineKeyboardButton(text='–ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é', callback_data='back_to_admin')])
    return InlineKeyboardMarkup(kb)

def edit_goods(res):
    kb =[]
    for i in range(len(res)):
        kb.append([InlineKeyboardButton(text=f'{res[i].name} | {res[i].category}', callback_data='ed_goods;' + str(res[i].id))])
    kb.append([InlineKeyboardButton(text='–ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é', callback_data='back_to_admin')])
    return InlineKeyboardMarkup(kb)

def edit_category(res):
    kb = []
    kb.append([InlineKeyboardButton(text='–ù–∞–∑–≤–∞–Ω–∏–µ', callback_data='ed_category;' + str(res.id) + ';name')])
    kb.append([InlineKeyboardButton(text='–û–ø–∏—Å–∞–Ω–∏–µ', callback_data='ed_category;' + str(res.id) + ';description')])
    kb.append([InlineKeyboardButton(text='–ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é', callback_data='back_to_admin')])
    return InlineKeyboardMarkup(kb)

def edit_good(res):
    kb = []
    kb.append([InlineKeyboardButton(text=f'–ù–∞–∑–≤–∞–Ω–∏–µ', callback_data='ed_good;' + str(res.id) + ';name')])
    kb.append([InlineKeyboardButton(text=f'–ö–∞—Ç–µ–≥–æ—Ä–∏—è', callback_data='ed_good;' + str(res.id) + ';category')])
    kb.append([InlineKeyboardButton(text=f'–°—Ç–æ–∏–º–æ—Å—Ç—å', callback_data='ed_good;' + str(res.id) + ';cost')])
    kb.append([InlineKeyboardButton(text=f'–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ', callback_data='ed_good;' + str(res.id) + ';count')])
    kb.append([InlineKeyboardButton(text=f'–û–ø–∏—Å–∞–Ω–∏–µ', callback_data='ed_good;' + str(res.id) + ';description')])
    kb.append([InlineKeyboardButton(text='–ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é', callback_data='back_to_admin')])
    return InlineKeyboardMarkup(kb)


admin_kb = InlineKeyboardMarkup([
    [InlineKeyboardButton(text='–î–æ–±–∞–≤–∏—Ç—å –∫–∞—Ç–µ–≥–æ—Ä–∏—é', callback_data='add_category')],
    [InlineKeyboardButton(text='–î–æ–±–∞–≤–∏—Ç—å —Ç–æ–≤–∞—Ä', callback_data='add_good')],
    [InlineKeyboardButton(text='–£–¥–∞–ª–∏—Ç—å –∫–∞—Ç–µ–≥–æ—Ä–∏—é', callback_data='del_category')],
    [InlineKeyboardButton(text='–£–¥–∞–ª–∏—Ç—å —Ç–æ–≤–∞—Ä', callback_data='del_good')],
    [InlineKeyboardButton(text='–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –∫–∞—Ç–µ–≥–æ—Ä–∏—é', callback_data='edit_category')],
    [InlineKeyboardButton(text='–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å —Ç–æ–≤–∞—Ä', callback_data='edit_good')]
])

profile_kb = InlineKeyboardMarkup([
    [InlineKeyboardButton(text='üí∏ –ü–æ–ø–æ–ª–Ω–∏—Ç—å –±–∞–ª–∞–Ω—Å', callback_data='deposite')],
    [InlineKeyboardButton(text='üë±‚Äç‚ôÄÔ∏èü§ùüë±‚Äç‚ôÇÔ∏è –†–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞', callback_data='referal_system')],
    [InlineKeyboardButton(text='üõí –ò—Å—Ç–æ—Ä–∏—è –ø–æ–∫—É–ø–æ–∫', callback_data='buy_history')]
])

info_kb = InlineKeyboardMarkup([
    [InlineKeyboardButton(text='üÜò –¢–µ—Ö. –ø–æ–¥–¥–µ—Ä–∂–∫–∞', callback_data='add_good')],
    [InlineKeyboardButton(text='üß† –ü—Ä–∞–≤–∏–ª–∞', callback_data='add_category')],
    [InlineKeyboardButton(text='ü´Ä –ù–∞—à–∏ –ø—Ä–æ–µ–∫—Ç—ã', callback_data='del_category')]
])

deposite_kb = InlineKeyboardMarkup([
    [InlineKeyboardButton(text='–ü–æ–ø–æ–ª–Ω–∏—Ç—å –±–∞–ª–∞–Ω—Å', callback_data='deposite')]
])

def url(u):
    kb = [] 
    kb.append([InlineKeyboardButton(text='–ü–µ—Ä–µ–π—Ç–∏ –∫ –æ–ø–ª–∞—Ç–µ', url=u)])
    return InlineKeyboardMarkup(kb)
